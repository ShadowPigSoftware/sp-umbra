#pragma once

#include "utf32_character_class.hpp"

namespace ShadowPig::Umbra {
    class UTF32CharacterConstants {
    public:
        //CONTROL
        static constexpr UTF32CharacterClass EndOfUnit = UTF32CharacterClass(0xFFFFFFFFu);
        //String constants
        static constexpr UTF32CharacterClass StartOfString = UTF32CharacterClass(0xFFFFFFF0u);
        static constexpr UTF32CharacterClass EndOfString = UTF32CharacterClass(0xFFFFFFF1u);
        static constexpr UTF32CharacterClass EscapedDollar = UTF32CharacterClass(0xFFFFFFF2u);
        //Preprocessor constants
        static constexpr UTF32CharacterClass StartOfPreprocessorDeclaration = UTF32CharacterClass(0xFFFFFFF8u);
        static constexpr UTF32CharacterClass EndOfPreprocessorDeclaration = UTF32CharacterClass(0xFFFFFFF9u);
        static constexpr UTF32CharacterClass StartOfPreprocessorUsage = UTF32CharacterClass(0xFFFFFFFAu);
        static constexpr UTF32CharacterClass EndOfPreprocessorUsage = UTF32CharacterClass(0xFFFFFFFBu);

        //ASCII
        static constexpr UTF32CharacterClass Null = UTF32CharacterClass(0x00000000u);
        static constexpr UTF32CharacterClass StartOfHeader = UTF32CharacterClass(0x00000001u);
        static constexpr UTF32CharacterClass StartOfText = UTF32CharacterClass(0x00000002u);
        static constexpr UTF32CharacterClass EndOfText = UTF32CharacterClass(0x00000003u);
        static constexpr UTF32CharacterClass EndOfTransmission = UTF32CharacterClass(0x00000004u);
        static constexpr UTF32CharacterClass Enquiry = UTF32CharacterClass(0x00000005u);
        static constexpr UTF32CharacterClass Acknowledge = UTF32CharacterClass(0x00000006u);
        static constexpr UTF32CharacterClass Bell = UTF32CharacterClass(0x00000007u);
        static constexpr UTF32CharacterClass Backspace = UTF32CharacterClass(0x00000008u);
        static constexpr UTF32CharacterClass HorizontalTab = UTF32CharacterClass(0x00000009u);
        static constexpr UTF32CharacterClass LineFeed = UTF32CharacterClass(0x0000000Au);
        static constexpr UTF32CharacterClass VerticalTab = UTF32CharacterClass(0x0000000Bu);
        static constexpr UTF32CharacterClass FormFeed = UTF32CharacterClass(0x0000000Cu);
        static constexpr UTF32CharacterClass CarriageReturn = UTF32CharacterClass(0x0000000Du);
        static constexpr UTF32CharacterClass ShiftOut = UTF32CharacterClass(0x0000000Eu);
        static constexpr UTF32CharacterClass ShiftIn = UTF32CharacterClass(0x0000000Fu);
        static constexpr UTF32CharacterClass DataLinkEscape = UTF32CharacterClass(0x00000010u);
        static constexpr UTF32CharacterClass DeviceControl1 = UTF32CharacterClass(0x00000011u);
        static constexpr UTF32CharacterClass DeviceControl2 = UTF32CharacterClass(0x00000012u);
        static constexpr UTF32CharacterClass DeviceControl3 = UTF32CharacterClass(0x00000013u);
        static constexpr UTF32CharacterClass DeviceControl4 = UTF32CharacterClass(0x00000014u);
        static constexpr UTF32CharacterClass NegativeAcknowledge = UTF32CharacterClass(0x00000015u);
        static constexpr UTF32CharacterClass Synchronize = UTF32CharacterClass(0x00000016u);
        static constexpr UTF32CharacterClass EndOfTransmissionBlock = UTF32CharacterClass(0x00000017u);
        static constexpr UTF32CharacterClass Cancel = UTF32CharacterClass(0x00000018u);
        static constexpr UTF32CharacterClass EndOfMedium = UTF32CharacterClass(0x00000019u);
        static constexpr UTF32CharacterClass Substitute = UTF32CharacterClass(0x0000001Au);
        static constexpr UTF32CharacterClass Escape = UTF32CharacterClass(0x0000001Bu);
        static constexpr UTF32CharacterClass FileSeparator = UTF32CharacterClass(0x0000001Cu);
        static constexpr UTF32CharacterClass GroupSeparator = UTF32CharacterClass(0x0000001Du);
        static constexpr UTF32CharacterClass RecordSeparator = UTF32CharacterClass(0x0000001Eu);
        static constexpr UTF32CharacterClass UnitSeparator = UTF32CharacterClass(0x0000001Fu);
        static constexpr UTF32CharacterClass Space = UTF32CharacterClass(0x00000020u);
        static constexpr UTF32CharacterClass ExclamationMark = UTF32CharacterClass(0x00000021u);
        static constexpr UTF32CharacterClass DoubleQuote = UTF32CharacterClass(0x00000022u);
        static constexpr UTF32CharacterClass Hash = UTF32CharacterClass(0x00000023u);
        static constexpr UTF32CharacterClass Dollar = UTF32CharacterClass(0x00000024u);
        static constexpr UTF32CharacterClass Percent = UTF32CharacterClass(0x00000025u);
        static constexpr UTF32CharacterClass Ampersand = UTF32CharacterClass(0x00000026u);
        static constexpr UTF32CharacterClass SingleQuote = UTF32CharacterClass(0x00000027u);
        static constexpr UTF32CharacterClass LeftParenthesis = UTF32CharacterClass(0x00000028u);
        static constexpr UTF32CharacterClass RightParenthesis = UTF32CharacterClass(0x00000029u);
        static constexpr UTF32CharacterClass Asterisk = UTF32CharacterClass(0x0000002Au);
        static constexpr UTF32CharacterClass Plus = UTF32CharacterClass(0x0000002Bu);
        static constexpr UTF32CharacterClass Comma = UTF32CharacterClass(0x0000002Cu);
        static constexpr UTF32CharacterClass Minus = UTF32CharacterClass(0x0000002Du);
        static constexpr UTF32CharacterClass Period = UTF32CharacterClass(0x0000002Eu);
        static constexpr UTF32CharacterClass Slash = UTF32CharacterClass(0x0000002Fu);
        static constexpr UTF32CharacterClass Zero = UTF32CharacterClass(0x00000030u);
        static constexpr UTF32CharacterClass One = UTF32CharacterClass(0x00000031u);
        static constexpr UTF32CharacterClass Two = UTF32CharacterClass(0x00000032u);
        static constexpr UTF32CharacterClass Three = UTF32CharacterClass(0x00000033u);
        static constexpr UTF32CharacterClass Four = UTF32CharacterClass(0x00000034u);
        static constexpr UTF32CharacterClass Five = UTF32CharacterClass(0x00000035u);
        static constexpr UTF32CharacterClass Six = UTF32CharacterClass(0x00000036u);
        static constexpr UTF32CharacterClass Seven = UTF32CharacterClass(0x00000037u);
        static constexpr UTF32CharacterClass Eight = UTF32CharacterClass(0x00000038u);
        static constexpr UTF32CharacterClass Nine = UTF32CharacterClass(0x00000039u);
        static constexpr UTF32CharacterClass Colon = UTF32CharacterClass(0x0000003Au);
        static constexpr UTF32CharacterClass Semicolon = UTF32CharacterClass(0x0000003Bu);
        static constexpr UTF32CharacterClass LessThan = UTF32CharacterClass(0x0000003Cu);
        static constexpr UTF32CharacterClass Equality = UTF32CharacterClass(0x0000003Du);
        static constexpr UTF32CharacterClass GreaterThan = UTF32CharacterClass(0x0000003Eu);
        static constexpr UTF32CharacterClass QuestionMark = UTF32CharacterClass(0x0000003Fu);
        static constexpr UTF32CharacterClass At = UTF32CharacterClass(0x00000040u);
        static constexpr UTF32CharacterClass A = UTF32CharacterClass(0x00000041u);
        static constexpr UTF32CharacterClass B = UTF32CharacterClass(0x00000042u);
        static constexpr UTF32CharacterClass C = UTF32CharacterClass(0x00000043u);
        static constexpr UTF32CharacterClass D = UTF32CharacterClass(0x00000044u);
        static constexpr UTF32CharacterClass E = UTF32CharacterClass(0x00000045u);
        static constexpr UTF32CharacterClass F = UTF32CharacterClass(0x00000046u);
        static constexpr UTF32CharacterClass G = UTF32CharacterClass(0x00000047u);
        static constexpr UTF32CharacterClass H = UTF32CharacterClass(0x00000048u);
        static constexpr UTF32CharacterClass I = UTF32CharacterClass(0x00000049u);
        static constexpr UTF32CharacterClass J = UTF32CharacterClass(0x0000004Au);
        static constexpr UTF32CharacterClass K = UTF32CharacterClass(0x0000004Bu);
        static constexpr UTF32CharacterClass L = UTF32CharacterClass(0x0000004Cu);
        static constexpr UTF32CharacterClass M = UTF32CharacterClass(0x0000004Du);
        static constexpr UTF32CharacterClass N = UTF32CharacterClass(0x0000004Eu);
        static constexpr UTF32CharacterClass O = UTF32CharacterClass(0x0000004Fu);
        static constexpr UTF32CharacterClass P = UTF32CharacterClass(0x00000050u);
        static constexpr UTF32CharacterClass Q = UTF32CharacterClass(0x00000051u);
        static constexpr UTF32CharacterClass R = UTF32CharacterClass(0x00000052u);
        static constexpr UTF32CharacterClass S = UTF32CharacterClass(0x00000053u);
        static constexpr UTF32CharacterClass T = UTF32CharacterClass(0x00000054u);
        static constexpr UTF32CharacterClass U = UTF32CharacterClass(0x00000055u);
        static constexpr UTF32CharacterClass V = UTF32CharacterClass(0x00000056u);
        static constexpr UTF32CharacterClass W = UTF32CharacterClass(0x00000057u);
        static constexpr UTF32CharacterClass X = UTF32CharacterClass(0x00000058u);
        static constexpr UTF32CharacterClass Y = UTF32CharacterClass(0x00000059u);
        static constexpr UTF32CharacterClass Z = UTF32CharacterClass(0x0000005Au);
        static constexpr UTF32CharacterClass LeftBracket = UTF32CharacterClass(0x0000005Bu);
        static constexpr UTF32CharacterClass Backslash = UTF32CharacterClass(0x0000005Cu);
        static constexpr UTF32CharacterClass RightBracket = UTF32CharacterClass(0x0000005Du);
        static constexpr UTF32CharacterClass Caret = UTF32CharacterClass(0x0000005Eu);
        static constexpr UTF32CharacterClass Underscore = UTF32CharacterClass(0x0000005Fu);
        static constexpr UTF32CharacterClass Backtick = UTF32CharacterClass(0x00000060u);
        static constexpr UTF32CharacterClass a = UTF32CharacterClass(0x00000061u);
        static constexpr UTF32CharacterClass b = UTF32CharacterClass(0x00000062u);
        static constexpr UTF32CharacterClass c = UTF32CharacterClass(0x00000063u);
        static constexpr UTF32CharacterClass d = UTF32CharacterClass(0x00000064u);
        static constexpr UTF32CharacterClass e = UTF32CharacterClass(0x00000065u);
        static constexpr UTF32CharacterClass f = UTF32CharacterClass(0x00000066u);
        static constexpr UTF32CharacterClass g = UTF32CharacterClass(0x00000067u);
        static constexpr UTF32CharacterClass h = UTF32CharacterClass(0x00000068u);
        static constexpr UTF32CharacterClass i = UTF32CharacterClass(0x00000069u);
        static constexpr UTF32CharacterClass j = UTF32CharacterClass(0x0000006Au);
        static constexpr UTF32CharacterClass k = UTF32CharacterClass(0x0000006Bu);
        static constexpr UTF32CharacterClass l = UTF32CharacterClass(0x0000006Cu);
        static constexpr UTF32CharacterClass m = UTF32CharacterClass(0x0000006Du);
        static constexpr UTF32CharacterClass n = UTF32CharacterClass(0x0000006Eu);
        static constexpr UTF32CharacterClass o = UTF32CharacterClass(0x0000006Fu);
        static constexpr UTF32CharacterClass p = UTF32CharacterClass(0x00000070u);
        static constexpr UTF32CharacterClass q = UTF32CharacterClass(0x00000071u);
        static constexpr UTF32CharacterClass r = UTF32CharacterClass(0x00000072u);
        static constexpr UTF32CharacterClass s = UTF32CharacterClass(0x00000073u);
        static constexpr UTF32CharacterClass t = UTF32CharacterClass(0x00000074u);
        static constexpr UTF32CharacterClass u = UTF32CharacterClass(0x00000075u);
        static constexpr UTF32CharacterClass v = UTF32CharacterClass(0x00000076u);
        static constexpr UTF32CharacterClass w = UTF32CharacterClass(0x00000077u);
        static constexpr UTF32CharacterClass x = UTF32CharacterClass(0x00000078u);
        static constexpr UTF32CharacterClass y = UTF32CharacterClass(0x00000079u);
        static constexpr UTF32CharacterClass z = UTF32CharacterClass(0x0000007Au);
        static constexpr UTF32CharacterClass LeftBrace = UTF32CharacterClass(0x0000007Bu);
        static constexpr UTF32CharacterClass Pipe = UTF32CharacterClass(0x0000007Cu);
        static constexpr UTF32CharacterClass RightBrace = UTF32CharacterClass(0x0000007Du);
        static constexpr UTF32CharacterClass Tilde = UTF32CharacterClass(0x0000007Eu);
        static constexpr UTF32CharacterClass Delete = UTF32CharacterClass(0x0000007Fu);
    };
}